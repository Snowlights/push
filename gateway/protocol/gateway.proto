syntax = "proto3";
package push.gateway;
option go_package = "push.gateway";

import "Grpc.proto";

// protoc -I=. -I= {self location}/tool/idl/grpc
// --go_out=plugins=grpc:. gateway.proto

enum OpType {
    OpType_Default = 0;
    OpType_HeartBeat = 1; // heartbeat
    OpType_HeartBeatReply = 2; // heartbeat reply

    OpType_Auth = 3; // auth
    OpType_AuthReply = 4; // auth reply

    OpType_ChangeRoom = 5; // change room
    OpType_ChangeRoomReply = 6; // change room reply

    OpType_Disconnect = 7; // disconnect
}

message Proto {
    sint64 ver = 1;
    sint64 op = 2;
    sint64 seq = 3;
    bytes body = 4;
}

enum PushMsgType {
    PushMsgType_PUSH = 0; // 普通直接给用户的推送消息，例如聊天
    PushMsgType_ROOM = 1; // 普通推送给用户的消息，例如直播间、群聊
    PushMsgType_BROADCAST = 2; // 系统广播消息，例如站内通知
}

message PushToUserReq {
    string userID = 1;
    repeated Proto msgs = 2;
}

message PushToUserData {}

message PushToUserRes {
    PushToUserData data = 1;
    grpcBase.ErrInfo errInfo = 2;
}

message PushToRoomReq {
    string roomID = 1;
    repeated Proto msgs = 2;
}

message PushToRoomData {

}

message PushToRoomRes {
    PushToRoomData data = 1;
    grpcBase.ErrInfo errInfo = 2;
}

message BroadCastReq {
    sint64 speed = 1;
    Proto msg = 2;
}

message BroadCastData {

}

message BroadCastRes {
    BroadCastData data = 1;
    grpcBase.ErrInfo errInfo = 2;
}

message BroadCastRoomReq {
    sint64 speed = 1;
    string roomID = 2;
    Proto msg = 3;
}

message BroadCastRoomData {

}

message BroadCastRoomRes {
    BroadCastRoomData data = 1;
    grpcBase.ErrInfo errInfo = 2;
}

service GateWay {
    rpc PushToUser(PushToUserReq) returns (PushToUserRes){}
    rpc PushToRoom(PushToRoomReq) returns (PushToRoomRes){}
    rpc BroadCast(BroadCastReq) returns (BroadCastRes){}
    rpc BroadCastRoom(BroadCastRoomReq) returns (BroadCastRoomRes){}
}